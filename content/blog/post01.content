<!-- Wrapper -->
<section id="wrapper">
	<header>
		<div class="inner">
			<div class="logo"><span class="icon fa-gem"></span></div>
			<h2>Post 1: My first blog post</h2>
		</div>
	</header>

	<!-- Content -->
	<div class="wrapper">
		<div class="inner">
			<div class="content">
				<textarea class="markdown">
					## This is a heading
					### This is a subheading

					You can change the background colours with the css variables defined at the start of `site/assets/css/main.css`.

					You can do $\LaTeX$ equations thanks to MathJaX. Both `$..$` and `\(..\)` work for inline equations, and both `$$..$$` and `\[..\]` work for displayed equations (note inside markdown/showdown blocks use `\\(..\\)` and `\\[..\\]`, or the `$` syntax). Eg. When \\(a \ne 0\\), there are two solutions to $ax^2 + bx + c = 0$ and they are:

					$$x = \frac{-b \pm \sqrt{b^2-4ac}}{2a}$$
				</textarea>
			</div>
		</div>
	</div>

	<!-- Four -->
	<section class="wrapper style3">
		<div class="inner">
			<div class="content">
				<textarea class="markdown">
					You can write your blog posts using Markdown. The easiest way to create a new page is to copy an old page, just use:

						nsm cp blog/post01 blog/postx

					See [here](https://github.com/showdownjs/showdown/wiki/Showdown's-Markdown-syntax) for documentation on Showdown's markdown syntax, and [here](https://github.com/showdownjs/showdown#setting-options) for documentation on Showdown options. 

					To use emojis you need to enable the **"emoji"** option, then emojis are eg. `:smile:`, `:+1:`, `:bacon:` and `:zap:` for :smile:, :+1:, :bacon: and :zap:. See [here](https://github.com/showdownjs/showdown/wiki/emojis) for a list of Showdown supported emojis.

					1. You can make text *italic* by surrounding it with \\*, eg. \\*text\\*. 
					2. You can make text **bold** by surrounding it with \\*\\*, eg. \\*\\*text\\*\\*. 
					3. You can make text ~~strikethrough~~ by surrounding it with \~\~, eg. \~\~text\~\~. 

					You can do unordered lists using \*, \- or \+, Eg.:
					* list item 1
					- list item 2
					+ list item 3

					You can do ordered lists using 1., 2., 3., etc., Eg.:
					1. list item 1
					2. list item 2
					3. list item 3
				</textarea>
			</div>
		</div>
	</section>

	<section id="four" class="wrapper spotlight style2">
		<div class="inner">
			<div class="content">
				<textarea class="markdown">
					You can do links using **\[text\]\(url\)**. You can do images using **\[alt text\]\(img url\)**.

					Tables aren't part of the core Markdown spec, but they are part of GFM and Showdown supports them by turning on the option **tables**.

					Colons can be used to align columns.

					In the new version, the outer pipes (|) are optional, matching GFM spec.

					You also don't need to make the raw Markdown line up prettily.

					You can also use other markdown syntax inside them.

					The following table:

					| Tables        | Are           | Cool  |
					| ------------- |:-------------:| -----:|
					| **col 3 is**  | right-aligned | $1600 |
					| col 2 is      | *centered*    |   $12 |
					| zebra stripes | ~~are neat~~  |    $1 |

					is generated using:

						| Tables        | Are           | Cool  |
						| ------------- |:-------------:| -----:|
						| **col 3 is**  | right-aligned | $1600 |
						| col 2 is      | *centered*    |   $12 |
						| zebra stripes | ~~are neat~~  |    $1 |

					You can do inline code by surrounding the code with \`, eg. `print("hello, world!")`.

					To do a code block just indent by 4 spaces preceded by an empty line, Eg.:

						#include <cstdio>
						#include <iostream>

						int main()
						{
							std::cout << "hello, world!" << std::endl;

							return 0;
						}

					You can also do syntax highlighting outside of markdown blocks using [Google Code Prettify](https://github.com/google/code-prettify), Eg.:
				</textarea>

				<pre class="prettyprint linenums">
					#include <cstdio>
					#include <iostream>

					int main()
					{
						std::cout << "hello, world!" << std::endl;

						return 0;
					}
				</pre>

				<p>
					To do a <b>pre</b> block without syntax highlighting outside markdown blocks use class <b>border</b>, Eg.:
				</p>

				<pre class="border">
					#include <cstdio>
					#include <iostream>

					int main()
					{
						std::cout << "hello, world!" << std::endl;

						return 0;
					}
				</pre>
			</div>
		</div>
	</section>
</section>
